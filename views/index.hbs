<html lang='en'>
  <head>
    <meta charset='UTF-8' />
    <meta http-equiv='X-UA-Compatible' content='IE=edge' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />
    <!-- CSS only -->
    <link
      href='https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css'
      rel='stylesheet'
      integrity='sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi'
      crossorigin='anonymous'
    />
    <!-- JavaScript Bundle with Popper -->
    <script
      src='https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js'
      integrity='sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3'
      crossorigin='anonymous'
      defer
    ></script>
    <script>
      setTimeout(() => {location.reload(); }, 5000);
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <title>Patr√≥n Adapter</title>
  </head>


  <header class='mb-2'>
    <!-- As a heading -->
    <nav class='navbar bg-primary'>
      <div class='container-fluid'>
        <span class='navbar-brand mb-0 h1'> <b style="color:white">Monitor de temperatura</b></span>
      </div>
    </nav>
  </header>

  <body>
    <div class="containter pt-4">
      <div class="row">
        <div class="col-12 text-center">
          <canvas id="myChart" style="width:100%;max-width:800px"></canvas>
        </div>
        <div class="col-10 mx-auto pt-4">
              <div class="table-responsive pt-4">
                <table class='table table-hover'>
                  <thead class="table-primary">
                    <tr>
                      <th scope='col'>Id registro</th>
                      <th scope='col'>Fecha / Hora</th>
                      <th scope='col'>Temperatura</th>
                      <th scope='col'>Sensor</th>
                    </tr>
                  </thead>
                  <tbody>
                    {{#reports}}
                      <tr scope='row'>
                        <td>{{code}}</td>
                        <td>{{ingressDate}}</td>
                        <td>{{temperature}}</td>
                        <td>{{description}}</td>
                      </tr>
                    {{/reports}}
                  </tbody>
                </table>  
              </div>
        </div>
      </div>
    </div>
    



  </body>
  <script>
    var table = [
      {{#reports}}
      {
        date: "{{ingressDate}}",
        code: {{code}},
        temperature: {{temperature}},
        description: "{{description}}"
      },
      {{/reports}}
    ];
    table.sort(function(a, b){ return a.code - b.code; });

    yArrays = [];
    xArrays = [];

    const result = table.reduce((group, product) => {
      const { description } = product;
      group[description] = group[description] ?? [];
      group[description].push(product);
      return group;
    }, {});

    let devices = Object.getOwnPropertyNames(result);
    devices.forEach(deviceId => xArrays.push(result[deviceId]));

    var xValues = xArrays[0].map(x => x.date.split('GMT')[0]).slice(-15);
    var y0Values = xArrays[0].map(x => x.temperature).slice(-15);
    var y1Values = xArrays[1].map(x => x.temperature).slice(-15);
    
    new Chart("myChart", {
      type: "line",
      data: {
        labels: xValues,
        datasets: [{
          fill: false,
          lineTension: 0,
          backgroundColor: "rgba(0,0,255,1.0)",
          borderColor: "rgba(0,0,255,0.1)",
          data: y0Values
        },
        {
          fill: false,
          lineTension: 0,
          backgroundColor: "rgba(0,255,0,1.0)",
          borderColor: "rgba(0,255,0,0.1)",
          data: y1Values
        }]
      },
      options: {
        legend: {display: false},
        scales: {
          yAxes: [{ticks: {min: 0, max:100}}],
        },
        animation: false
      }
    });

  </script>
</html>